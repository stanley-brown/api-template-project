trigger:
  branches:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest
  name: 'Default'

# select variable group based on the branch being built
variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    - group: "anypoint-prod"
  - ${{ elseif eq( variables['Build.SourceBranchName'], 'uat' ) }}:
    - group: "anypoint-uat"
  - ${{ else }}:
    - group: "anypoint-dev"   

steps:

- task: Cache@2
  displayName: Cache Maven Repo
  inputs:
    key: $(Build.SourcesDirectory)/pom.xml
    path: $(Pipeline.Workspace)/.m2/repository
  
- task: DownloadSecureFile@1
  displayName: 'secure file settings'
  inputs:
    secureFile: 'settings.xml'

- task: Maven@3
  displayName: 'Clean and Package'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean package'

- task: Maven@3
  displayName: 'Deploy to Mule Runtime'
  inputs:
    mavenPomFile: 'pom.xml'  
    javaHomeOption: "JDKVersion"
    jdkVersionOption: "1.8"
    jdkArchitectureOption: "x64"    
    goals: '-DskipTests deploy -DmuleDeploy -X'
    options: '-s $(Agent.TempDirectory)/settings.xml -DdeployTarget=$(deployTarget) -DdeployTargetType=$(deployTargetType) -DconnectedappClientId=$(connectedappClientId) -DconnectedappClientSecret=$(connectedappClientSecret) -DbusinessGroupId=$(businessGroupId) -Denvironment=$(environment)'    
  timeoutInMinutes: 20